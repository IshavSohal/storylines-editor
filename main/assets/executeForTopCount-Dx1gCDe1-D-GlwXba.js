import{y as i}from"./utils-9sQxfkoa-CnodAw6Z.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-DRXhMj8c.js";import a from"./TopFeaturesQuery-Ckj_IYM7-Jun_y1QQ.js";import"./main-DgTxfbeE.js";import"./normalizeUtils-Bxmy9MNI-BdiD4n3S.js";import"./normalizeUtilsCommon-CRJlkfEA-DOUkOghU.js";import"./utils-Bq23Xwmj-8jO5fIeW.js";import"./query-DFW9-NG_-E8mWl6Kh.js";import"./pbfQueryUtils-F4ZE8-K8-XXPpRA2n.js";import"./pbf-D-y3_eZO-3mHbm9py.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-CxewvH87.js";import"./projection-BA9M1R7d-BrYmaU4s.js";import"./projectBuffer-CvCBvJ6W-GyUGmdU2.js";import"./TimeExtent-Cn0Jofqr-ktBcYNOQ.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
